/*
Appwrite

Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)

The version of the OpenAPI document: 1.5.0
Contact: team@appwrite.io

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  AccountApi,
  AvatarsApi,
  DatabasesApi,
  FunctionsApi,
  GraphqlApi,
  LocaleApi,
  MessagingApi,
  StorageApi,
  TeamsApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { AppwriteClientCustom } from "./client-custom";

export class AppwriteClient extends AppwriteClientCustom {
  readonly account: AccountApi;
  readonly avatars: AvatarsApi;
  readonly databases: DatabasesApi;
  readonly functions: FunctionsApi;
  readonly graphql: GraphqlApi;
  readonly locale: LocaleApi;
  readonly messaging: MessagingApi;
  readonly storage: StorageApi;
  readonly teams: TeamsApi;

  constructor(configurationParameters: ConfigurationParameters) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.account = new AccountApi(configuration);
    this.avatars = new AvatarsApi(configuration);
    this.databases = new DatabasesApi(configuration);
    this.functions = new FunctionsApi(configuration);
    this.graphql = new GraphqlApi(configuration);
    this.locale = new LocaleApi(configuration);
    this.messaging = new MessagingApi(configuration);
    this.storage = new StorageApi(configuration);
    this.teams = new TeamsApi(configuration);
  }

}
